import { GraphQLClient, GraphQLRequestClientConfig } from '../graphql';
import { LayoutServiceData } from '../layout';
import { GraphQLRequestClientFactory } from '../graphql-request-client';
export interface GraphQLErrorPagesServiceConfig extends Pick<GraphQLRequestClientConfig, 'retries' | 'retryStrategy'> {
    /**
     * Your Graphql endpoint
     * @deprecated use @param clientFactory property instead
     */
    endpoint?: string;
    /**
     * The API key to use for authentication
     * @deprecated use @param clientFactory property instead
     */
    apiKey?: string;
    /**
     * The JSS application name
     */
    siteName: string;
    /**
     * The language
     */
    language: string;
    /**
     * A GraphQL Request Client Factory is a function that accepts configuration and returns an instance of a GraphQLRequestClient.
     * This factory function is used to create and configure GraphQL clients for making GraphQL API requests.
     */
    clientFactory?: GraphQLRequestClientFactory;
}
/**
 * Object model of Error Pages result
 */
export declare type ErrorPages = {
    notFoundPage: {
        rendered: LayoutServiceData;
    };
    notFoundPagePath: string;
    serverErrorPage: {
        rendered: LayoutServiceData;
    };
    serverErrorPagePath: string;
};
/**
 * Service that fetch the error pages data using Sitecore's GraphQL API.
 */
export declare class GraphQLErrorPagesService {
    options: GraphQLErrorPagesServiceConfig;
    private graphQLClient;
    protected get query(): string;
    /**
     * Creates an instance of graphQL error pages service with the provided options
     * @param {GraphQLErrorPagesServiceConfig} options instance
     */
    constructor(options: GraphQLErrorPagesServiceConfig);
    /**
     * Fetch list of error pages for the site
     * @returns {ErrorPages} list of url's error pages
     * @throws {Error} if the siteName is empty.
     */
    fetchErrorPages(): Promise<ErrorPages | null>;
    /**
     * Gets a GraphQL client that can make requests to the API. Uses graphql-request as the default
     * library for fetching graphql data (@see GraphQLRequestClient). Override this method if you
     * want to use something else.
     * @returns {GraphQLClient} implementation
     */
    protected getGraphQLClient(): GraphQLClient;
}

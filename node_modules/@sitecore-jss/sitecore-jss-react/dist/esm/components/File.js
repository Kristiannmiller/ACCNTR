var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
export const File = (_a) => {
    /*
      File fields cannot be managed via the EE. We never output "editable."
    */
    var { field, children } = _a, otherProps = __rest(_a, ["field", "children"]);
    const dynamicField = field;
    if (!field || (!dynamicField.value && !dynamicField.src)) {
        return null;
    }
    // handle link directly on field for forgetful devs
    const file = (dynamicField.src
        ? field
        : dynamicField.value);
    if (!file) {
        return null;
    }
    const linkText = !children ? file.title || file.displayName : null;
    const anchorAttrs = {
        href: file.src,
    };
    return React.createElement('a', Object.assign(Object.assign({}, anchorAttrs), otherProps), linkText, children);
};
File.displayName = 'File';

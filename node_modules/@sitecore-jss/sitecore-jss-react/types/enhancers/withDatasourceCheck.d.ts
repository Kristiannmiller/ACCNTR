/// <reference types="@types/react" />
import React, { JSX } from 'react';
import { ComponentRendering } from '@sitecore-jss/sitecore-jss/layout';
export declare const DefaultEditingError: () => JSX.Element;
export interface WithDatasourceCheckProps {
    rendering: ComponentRendering;
}
export interface WithDatasourceCheckOptions {
    /**
     * A component that is rendered when a datasource is missing during editing.
     * If unspecified, a default component with message is displayed.
     */
    editingErrorComponent?: React.ComponentClass<unknown> | React.FC<unknown>;
}
/**
 * Checks whether a Sitecore datasource is present and renders appropriately depending on page mode (normal vs editing).
 * @param {WithDatasourceCheckOptions} [options]
 * @returns
 *  The wrapped component, if a datasource is present.
 *  A null component (in normal mode) or an error component (in editing mode), if a datasource is not present.
 */
export declare function withDatasourceCheck(options?: WithDatasourceCheckOptions): <ComponentProps extends WithDatasourceCheckProps>(Component: React.ComponentType<ComponentProps>) => (props: ComponentProps) => JSX.Element;

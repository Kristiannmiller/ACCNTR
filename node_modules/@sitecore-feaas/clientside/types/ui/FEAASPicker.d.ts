/// <reference types="react" />
import type * as FEAASPickerImports from '@sitecore-feaas/frontend/picker';
import { FEAASElement } from '../components/FEAASElement.js';
export declare function FEAASPickerProps(element: FEAASElement<any, any>): {
    part: string;
    slot: string;
    mode: "library" | "context" | "datasources" | "versions" | "element" | "themes" | "overview" | "attributes" | "bundles";
    dialog: string;
    placeholder: string;
    frontend: string;
    src: string;
    hidden: boolean;
    variant: "internal" | "pages";
    context: FEAASPickerImports.Style.Context;
    onClose: (...args: any[]) => void;
    setAttribute: FEAASPickerImports.AttributeSetter;
    getAttribute: FEAASPickerImports.AttributeGetter;
};
export type FEAASPickerProps = ReturnType<typeof FEAASPickerProps>;
export declare class FEAASPicker extends FEAASElement<FEAASPickerProps, typeof FEAASPickerImports> {
    static observedAttributes: string[];
    defaultProps: Partial<{
        part: string;
        slot: string;
        mode: "library" | "context" | "datasources" | "versions" | "element" | "themes" | "overview" | "attributes" | "bundles";
        dialog: string;
        placeholder: string;
        frontend: string;
        src: string;
        hidden: boolean;
        variant: "internal" | "pages";
        context: FEAASPickerImports.Style.Context;
        onClose: (...args: any[]) => void;
        setAttribute: FEAASPickerImports.AttributeSetter;
        getAttribute: FEAASPickerImports.AttributeGetter;
    }>;
    getProps(): {
        part: string;
        slot: string;
        mode: "library" | "context" | "datasources" | "versions" | "element" | "themes" | "overview" | "attributes" | "bundles";
        dialog: string;
        placeholder: string;
        frontend: string;
        src: string;
        hidden: boolean;
        variant: "internal" | "pages";
        context: FEAASPickerImports.Style.Context;
        onClose: (...args: any[]) => void;
        setAttribute: FEAASPickerImports.AttributeSetter;
        getAttribute: FEAASPickerImports.AttributeGetter;
    };
    load(): Promise<typeof FEAASPickerImports>;
    connectedCallback(): void;
    render({ placeholder, context, mode, dialog, children, variant }: React.PropsWithChildren<FEAASPickerProps>, { Picker, React, useContext, EnvironmentContext, useLibrary, useSDK, BYOC }: typeof FEAASPickerImports): FEAASPickerImports.React.JSX.Element;
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'feaas-picker': Partial<typeof FEAASPickerImports>;
        }
    }
}
export { FEAASPicker as Picker };
//# sourceMappingURL=FEAASPicker.d.ts.map
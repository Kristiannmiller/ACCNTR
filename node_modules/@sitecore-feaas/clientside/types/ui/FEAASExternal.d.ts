import * as BYOC from '@sitecore/byoc';
import React from 'react';
import ReactDOM from 'react-dom';
import { FEAASElement } from '../components/FEAASElement.js';
import { ReactJSX, ReactModules } from '../components/FEAASReactElement.js';
import { FEAASComponentProps } from './react.js';
export declare const FEAASExternalPropsObject: typeof BYOC.getMergedComponentProperties;
export declare function FEAASExternalProps(element: FEAASElement): FEAASExternalProps;
export type FEAASExternalProps = {
    componentName: string;
    [key: string]: any;
};
export default class FEAASExternal extends FEAASElement<FEAASExternalProps, ReactModules> {
    load(): Promise<{
        React: typeof React;
        ReactDOM: typeof ReactDOM;
        ReactDOMClient: any;
    }>;
    _setAttribute: typeof HTMLElement.prototype.setAttribute;
    connectedCallback(): void;
    update(): any;
    render(props: FEAASExternalProps, { React }: ReactModules): ReactJSX;
    getComponentName(): string;
    getProps(): FEAASExternalProps;
    static Preview(props: Partial<FEAASComponentProps<any>> & {
        src: string;
    }): React.JSX.Element;
    static linkComponents(components: Promise<any>[]): () => any;
    static registered: BYOC.RegisteredComponents;
    static registerComponent: typeof BYOC.registerComponent;
    static setRegistrationCallback: typeof BYOC.setRegistrationCallback;
    static getComponent: typeof BYOC.getComponent;
}
export declare const linkComponents: typeof FEAASExternal.linkComponents;
export { FEAASExternal as External };
//# sourceMappingURL=FEAASExternal.d.ts.map
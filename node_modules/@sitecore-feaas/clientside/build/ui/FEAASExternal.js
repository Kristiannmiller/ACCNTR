import * as BYOC from '@sitecore/byoc';
import React from 'react';
import ReactDOM from 'react-dom';
import { FEAASElement } from '../components/FEAASElement.js';
import { Component } from './react.js';
export const FEAASExternalPropsObject = BYOC.getMergedComponentProperties;
export function FEAASExternalProps(element) {
    const props = BYOC.objectKeysToCamelCase(Array.from(element.attributes).reduce((prev, { name, value }) => {
        if (name == 'data-external-id')
            name = 'component-name';
        return Object.assign(prev, { [name]: value });
    }, {}));
    return FEAASExternalPropsObject(props).merged;
}
class FEAASExternal extends FEAASElement {
    load() {
        return Promise.all([
            // @ts-ignore
            import('https://cdn.skypack.dev/react-dom/client')
        ]).then(([ReactDOMClient]) => {
            return { React, ReactDOM, ReactDOMClient };
        });
    }
    connectedCallback() {
        if (!this._setAttribute) {
            this._setAttribute = this.setAttribute;
            this.setAttribute = function (name, value) {
                const old = this.getAttribute(value);
                this._setAttribute(name, value);
                this.attributeChangedCallback(name, old, value);
            };
        }
        super.connectedCallback();
    }
    update() {
        var _a;
        const Component = (_a = BYOC.getComponent(this.getComponentName())) === null || _a === void 0 ? void 0 : _a.component;
        if (!Component && this.getAttribute('hydrate') == 'false')
            return;
        return super.update();
    }
    render(props, { React }) {
        var _a;
        const Component = (_a = BYOC.getComponent(this.getComponentName())) === null || _a === void 0 ? void 0 : _a.component;
        if (!Component) {
            console.warn(`FEAASExternal: \`${this.getComponentName()}\` is not registered`);
        }
        return React.createElement(React.Fragment, null, Component && React.createElement(Component, { componentName: this.getComponentName(), ...props }));
    }
    getComponentName() {
        return this.getAttribute('data-external-id');
    }
    getProps() {
        return FEAASExternalProps(this);
    }
    static Preview(props) {
        var _a;
        const src = (props === null || props === void 0 ? void 0 : props.src) || (typeof window !== 'undefined' ? (_a = window.location.search.match(/feaasSrc=([^&]+)/)) === null || _a === void 0 ? void 0 : _a[1] : null);
        return src ? React.createElement(Component, { src: src, ...props }) : null;
    }
    static linkComponents(components) {
        return () => components.map((components) => null);
    }
}
FEAASExternal.registered = BYOC.registered;
FEAASExternal.registerComponent = BYOC.registerComponent;
FEAASExternal.setRegistrationCallback = BYOC.setRegistrationCallback;
FEAASExternal.getComponent = BYOC.getComponent;
export default FEAASExternal;
FEAASExternal.register('feaas-external');
export const { linkComponents } = FEAASExternal;
export { FEAASExternal as External };
//# sourceMappingURL=FEAASExternal.js.map
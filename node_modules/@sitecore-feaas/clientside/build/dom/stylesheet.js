import { fetchAndRevalidateStylesheet, getStylesheetURL, parseStylesheetSource } from '../cdn.js';
export function renderStylesheet(props, style) {
    renderStylesheetPromise(props, (style || (style = document.createElement('style'))));
    return style;
}
export function renderStylesheetPromise(props, stylesheet) {
    stylesheet || (stylesheet = document.createElement('style'));
    return fetchAndRevalidateStylesheet(props, (cssText, phase) => {
        stylesheet.textContent = cssText;
    }).then(() => stylesheet);
}
const validatedStylesheets = new WeakSet();
export function loadStylesheet(props, callback) {
    var writableStylesheet;
    var foundStylesheet = findStylesheet(props);
    if (foundStylesheet) {
        if (validatedStylesheets.has(foundStylesheet)) {
            return Promise.resolve(foundStylesheet);
        }
        // it can be that page already have stylesheet using alternative URL (e.g. edge url), use that instead
        props = foundStylesheet.getAttribute('data-href') || foundStylesheet.getAttribute('href');
    }
    return fetchAndRevalidateStylesheet(props, (cssText, phase) => {
        // dont need to write stylesheet for cached state if we already found a stylesheet
        if (!(phase == 'initial' && foundStylesheet)) {
            writableStylesheet || (writableStylesheet = !foundStylesheet || foundStylesheet.tagName == 'LINK' ? createStylesheet(props) : foundStylesheet);
            writableStylesheet.textContent = cssText;
        }
        callback === null || callback === void 0 ? void 0 : callback(cssText, phase);
    }).then(() => writableStylesheet || foundStylesheet);
}
export function loadStylesheetAllowStale(props) {
    return new Promise((resolve, reject) => {
        loadStylesheet(props, resolve).catch(reject);
    });
}
// Find stylesheet on the page for given props, also check by alternative edge url
export function findStylesheet(props) {
    const cdnURL = getStylesheetURL(props);
    const { library } = parseStylesheetSource(cdnURL);
    const edgeURL = `/files/components/styles/${library}.css`;
    return document.querySelector(`style[data-href="${cdnURL}"], 
    link[rel="stylesheet"][href="${cdnURL}"], 
    style[data-href*="${edgeURL}"], 
    link[rel="stylesheet"][href*="${edgeURL}"]`);
}
export function createStylesheet(props) {
    const url = getStylesheetURL(props);
    const stylesheet = document.createElement('style');
    stylesheet.setAttribute('data-href', url);
    document.head.appendChild(stylesheet);
    return stylesheet;
}
//# sourceMappingURL=stylesheet.js.map
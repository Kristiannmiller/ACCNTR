import React, { useContext } from 'react'
import { beforeAll, beforeEach, describe, expect, it, vi } from 'vitest'
import { ServerComponent, registerComponent } from '../src/ui/react.js'
import { FEAASComponent } from '../src/components/FEAASComponent.js'
import { validate } from './FEAASComponent.react.test.js'

const earliest = new Date(2000, 1, 1, 0, 0, 0)
const earlier = new Date(2000, 1, 2, 0, 0, 0)
const now = new Date(2000, 1, 2, 12, 0, 0)

describe('React Server', () => {
  beforeAll(() => {
    vi.setSystemTime(now)
    FEAASComponent.register('feaas-component')
  })

  beforeEach(() => {
    document.write()
  })

  it('render with data settings', async () => {
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) => new Response('{"data": "1"}')
    )

    const Component = await ServerComponent({ src: 'library/test', data: { url: 'http://127.0.0.1:4000/api/data' } })

    await validate(
      <>{Component}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="stylesheet">{"data": "1"}</feaas-component>`
    )
  })

  describe('fetch=', () => {
    it('["template"] should embed data', async () => {
      vi.spyOn(global, 'fetch').mockImplementation(
        async (url: string, options: Parameters<typeof fetch>[1] = {}) => new Response('{"data": "1"}')
      )

      const Component = await ServerComponent({
        src: 'library/test',
        data: { url: 'http://127.0.0.1:4000/api/data' },
        fetch: ['template']
      })

      await validate(
        <>{Component}</>,
        `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="template" data="{&quot;data&quot;:&quot;1&quot;}">{"data": "1"}</feaas-component>`
      )
    })
    it('["data"] should embed data settings', async () => {
      vi.spyOn(global, 'fetch').mockImplementation(
        async (url: string, options: Parameters<typeof fetch>[1] = {}) => new Response('{"data": "1"}')
      )

      const Component = await ServerComponent({
        src: 'library/test',
        data: { url: 'http://127.0.0.1:4000/api/data' },
        fetch: ['data']
      })

      await validate(
        <>{Component}</>,
        `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="data" data="{&quot;url&quot;:&quot;http://127.0.0.1:4000/api/data&quot;}">{"data": "1"}</feaas-component>`
      )
    })
    it('[] should not embed  settings', async () => {
      vi.spyOn(global, 'fetch').mockImplementation(
        async (url: string, options: Parameters<typeof fetch>[1] = {}) => new Response('{"data": "1"}')
      )

      const Component = await ServerComponent({
        src: 'library/test',
        data: { url: 'http://127.0.0.1:4000/api/data' },
        fetch: []
      })

      await validate(
        <>{Component}</>,
        `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="">{"data": "1"}</feaas-component>`
      )
    })
  })

  it('render with dynamic data settings', async () => {
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) => new Response('{"data": "1"}')
    )

    const Component = await ServerComponent({ src: 'library/test', data: { url: 'http://127.0.0.1:4000/api/data' } })

    await validate(
      <>{Component}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="stylesheet">{"data": "1"}</feaas-component>`
    )
  })

  it('render with template', async () => {
    const Component1 = await ServerComponent({
      src: 'library/test',
      template:
        '<section class="-grid--custom" data-instance-id="ffmBzSOYiq"><div><x class="-block--media"><picture class="-image--foreground"><img src="https://feaasstatic.blob.core.windows.net/assets/sample/image.svg"></picture></x><z class="-spacer"></z></div><div><p>Text element</p></div></section>'
    })

    await validate(
      <>{Component1}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="stylesheet"><section class="-grid--custom" data-instance-id="ffmBzSOYiq"><div><x class="-block--media"><picture class="-image--foreground"><img src="https://feaasstatic.blob.core.windows.net/assets/sample/image.svg"></picture></x><z class="-spacer"></z></div><div><p>Text element</p></div></section></feaas-component>`
    )
  })
  it('render with object data', async () => {
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) => new Response('Test')
    )

    const Component = await ServerComponent({ src: 'library/test', data: { data: '2' } })
    await validate(
      <>{Component}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="stylesheet">Test</feaas-component>`
    )
  })
  it('render with object data, and data is embedded for clientside', async () => {
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) => new Response('Test')
    )

    const Component = await ServerComponent({ src: 'library/test', data: { data: '2' }, fetch: ['data'] })
    await validate(
      <>{Component}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="data" data="{&quot;data&quot;:&quot;2&quot;}">Test</feaas-component>`
    )
  })
  it('pre-render data', async () => {
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) =>
        new Response('Hey: <var data-path="value"></var>!')
    )

    const Component = await ServerComponent({ src: 'library/test', data: { value: 0 } })
    await validate(
      <>{Component}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="stylesheet">Hey: <var data-path="value">0</var>!</feaas-component>`
    )
  })
  it('pre-render data with style attribute', async () => {
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) =>
        new Response(
          '<p style="text-align: left; color: red;;"><b style="cursor: 1">Hey:</b> <var data-path="value"></var>!</p>'
        )
    )

    const Component = await ServerComponent({ src: 'library/test', data: { value: 0 } })
    await validate(
      <>{Component}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="stylesheet"><p style="text-align: left; color: red;"><b style="cursor: 1;">Hey:</b> <var data-path="value">0</var>!</p></feaas-component>`
    )
  })
  it('pre-render data with whitespace', async () => {
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) =>
        new Response('<p>Test <b>Hey:</b> <i>Dawg</i> <var data-path="value"></var>!</p>')
    )

    const Component = await ServerComponent({ src: 'library/test', data: { value: 0 } })
    await validate(
      <>{Component}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch="stylesheet"><p>Test <b>Hey:</b> <i>Dawg</i> <var data-path="value">0</var>!</p></feaas-component>`
    )
  })
  it('render external component', async () => {
    function MyComponent() {
      return <h1>My Component</h1>
    }
    registerComponent(MyComponent, {
      name: 'test-server-external'
    })
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) =>
        new Response('<p>This?</p><feaas-external data-external-id="test-server-external"></feaas-external>')
    )

    const Component = await ServerComponent({ src: 'library/test', data: { value: 0 }, fetch: [] })
    await validate(
      <>{Component}</>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch=""><p>This?</p><feaas-external data-external-id="test-server-external" hydrate="false"><h1>My Component</h1></feaas-external></feaas-component>`
    )
  })
  it('render external component with context', async () => {
    const Context = React.createContext({
      test: 'abc'
    })
    function MyComponent() {
      const { test } = useContext(Context)
      return <h1>My Component: {test}</h1>
    }
    registerComponent(MyComponent, {
      name: 'test-server-external-context'
    })
    vi.spyOn(global, 'fetch').mockImplementation(
      async (url: string, options: Parameters<typeof fetch>[1] = {}) =>
        new Response('<p>This?</p><feaas-external data-external-id="test-server-external-context"></feaas-external>')
    )

    const Component = await ServerComponent({ src: 'library/test', data: { value: 0 }, fetch: [] })
    await validate(
      <Context.Provider value={{ test: 'cde' }}>
        <>{Component}</>
      </Context.Provider>,
      `<feaas-component class="-feaas" library="library" component="test" src="library/test" fetch=""><p>This?</p><feaas-external data-external-id="test-server-external-context" hydrate="false"><h1>My Component: cde</h1></feaas-external></feaas-component>`
    )
  })
})

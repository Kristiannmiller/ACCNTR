/** Converts the keys of an object to kebab case. */
export const objectKeysToKebabCase = (object = {}) => Object.keys(object).reduce((acc, key) => Object.assign(acc, {
    [toKebabCase(key)]: object[key]
}), {});
export const objectKeysToCamelCase = (object = {}) => Object.keys(object).reduce((acc, key) => Object.assign(acc, {
    [toCamelCase(key)]: object[key]
}), {});
export function toKebabCase(str) {
    const KEBAB_REGEX = /[A-Z\u00C0-\u00D6\u00D8-\u00DE]/g;
    return toCamelCase(str).replace(KEBAB_REGEX, function (match) {
        return '-' + match.toLowerCase();
    });
}
export function toCamelCase(input) {
    input = input.replace(/[-_ ]+/g, ' ');
    input = input.charAt(0).toLowerCase() + input.slice(1);
    return input
        .split(/\s+/)
        .map((word, index) => (index === 0 ? word : word.charAt(0).toUpperCase() + word.slice(1)))
        .join('');
}
//# sourceMappingURL=utils.js.map
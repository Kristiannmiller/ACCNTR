@use 'toolbox' as *;

// Compopnent-specific mixin for adding dividers between columns.
@mixin column-divider {
    content: '';
    display: block;
    block-size: 75%;
    inline-size: var(--semantic-measures-stroke-small);
    margin-block: auto;
    position: absolute;
    inset-block: 0;
    inset-inline-start: calc(-1 * var(--column-gap) / 2);
    background-color: var(--semantic-color-border-default-tertiary);

    .content-inverse & {
        background-color: var(--semantic-color-content-inverse-primary);
    }
}

@layer organisms {
    .grid {
        --column-width: 14rem;
        --column-count: 1;
        --column-gap: var(--semantic-measures-spacing-024);
        display: grid;
        grid-template-columns: repeat(
            var(--column-count),
            minmax(0, var(--column-width))
        );
        column-gap: var(--column-gap);
        row-gap: var(--semantic-measures-spacing-024);
        margin-inline: auto;
        max-inline-size: calc(
            var(--column-width) * var(--column-count) +
                (var(--column-gap) * (var(--column-count) - 1))
        );

        &.grid-2-m {
            --column-count: 2;
        }
    }

    .grid-dividers {
        > * {
            position: relative;
        }
    }

    @include container-tablet-lg-max {
        .grid-dividers {
            &.grid-2-m {
                > *:nth-child(2n) {
                    &::before {
                        @include column-divider;
                    }
                }
            }
        }
    }

    @include container-desktop {
        .grid {
            --column-gap: var(--semantic-measures-spacing-040);
            --column-width: 18rem;
            row-gap: var(--semantic-measures-spacing-048);

            &.grid-1 {
                --column-count: 1;
            }

            &.grid-2 {
                --column-count: 2;
            }

            &.grid-3 {
                --column-count: 3;
            }

            &.grid-4 {
                --column-count: 4;
            }
        }

        .grid-dividers {
            &.grid-2 {
                > *:nth-child(2n) {
                    &::before {
                        @include column-divider;
                    }
                }
            }

            &.grid-3 {
                > *:nth-child(3n + 2),
                > *:nth-child(3n + 3) {
                    &::before {
                        @include column-divider;
                    }
                }
            }

            &.grid-4 {
                > *:nth-child(4n + 2),
                > *:nth-child(4n + 3),
                > *:nth-child(4n + 4) {
                    &::before {
                        @include column-divider;
                    }
                }
            }
        }
    }
}
